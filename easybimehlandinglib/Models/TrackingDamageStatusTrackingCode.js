/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of TrackingDamageStatusTrackingCode
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('TrackingDamageStatusTrackingCode', ['BaseModel', TrackingDamageStatusTrackingCodeModel]);

    function TrackingDamageStatusTrackingCodeModel(BaseModel) {
        var TrackingDamageStatusTrackingCode = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.trackingDamageId = this.getValue(obj.trackingDamageId);
            this.description = this.getValue(obj.description);
            this.trackingDamageStatus = this.getValue(obj.trackingDamageStatus);
            this.trackingDamageFile = this.getValue(obj.trackingDamageFile);
        };

        TrackingDamageStatusTrackingCode.prototype = new BaseModel();
        TrackingDamageStatusTrackingCode.prototype.constructor = TrackingDamageStatusTrackingCode;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        TrackingDamageStatusTrackingCode.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'trackingDamageId', realName: 'trackingDamageId' },
                { name: 'description', realName: 'description' },
                { name: 'trackingDamageStatus', realName: 'trackingDamageStatus' },
                {
                    name: 'trackingDamageFile',
                    realName: 'trackingDamageFile',
                    array: true,
                    type: 'TrackingDamageFileTrackinCode',
                }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        TrackingDamageStatusTrackingCode.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingDamageStatusTrackingCode.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        TrackingDamageStatusTrackingCode.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingDamageStatusTrackingCode.prototype.getTrackingDamageId = function () {
            return this.trackingDamageId;
        };
    
        /**
         * Setter for TrackingDamageId
         * 
         * @param {int} value 
         */
        TrackingDamageStatusTrackingCode.prototype.setTrackingDamageId = function (value) {
            this.trackingDamageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingDamageStatusTrackingCode.prototype.getDescription = function () {
            return this.description;
        };
    
        /**
         * Setter for Description
         * 
         * @param {string|null} value 
         */
        TrackingDamageStatusTrackingCode.prototype.setDescription = function (value) {
            this.description = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingDamageStatusTrackingCode.prototype.getTrackingDamageStatus = function () {
            return this.trackingDamageStatus;
        };
    
        /**
         * Setter for TrackingDamageStatus
         * 
         * @param {int} value 
         */
        TrackingDamageStatusTrackingCode.prototype.setTrackingDamageStatus = function (value) {
            this.trackingDamageStatus = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        TrackingDamageStatusTrackingCode.prototype.getTrackingDamageFile = function () {
            return this.trackingDamageFile;
        };
    
        /**
         * Setter for TrackingDamageFile
         * 
         * @param {array} value 
         */
        TrackingDamageStatusTrackingCode.prototype.setTrackingDamageFile = function (value) {
            this.trackingDamageFile = value;
        };
    
        return TrackingDamageStatusTrackingCode;
    }

}(angular));
