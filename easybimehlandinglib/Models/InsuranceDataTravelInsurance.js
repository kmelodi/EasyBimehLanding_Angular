/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of InsuranceDataTravelInsurance
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('InsuranceDataTravelInsurance', ['BaseModel', InsuranceDataTravelInsuranceModel]);

    function InsuranceDataTravelInsuranceModel(BaseModel) {
        var InsuranceDataTravelInsurance = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.travelInsurancePolicyExtendView = this.getValue(obj.travelInsurancePolicyExtendView);
            this.travelInsurancePolicyFilter = this.getValue(obj.travelInsurancePolicyFilter);
            this.id = this.getValue(obj.id);
            this.selectedInsurancePolicyHasBeenChanged = this.getValue(obj.selectedInsurancePolicyHasBeenChanged);
            this.isPaymented = this.getValue(obj.isPaymented);
            this.payable = this.getValue(obj.payable);
            this.paymented = this.getValue(obj.paymented);
            this.conflict = this.getValue(obj.conflict);
            this.hasConflictDocument = this.getValue(obj.hasConflictDocument);
            this.initialPrice = this.getValue(obj.initialPrice);
            this.finalPrice = this.getValue(obj.finalPrice);
            this.insuranceCompanyName = this.getValue(obj.insuranceCompanyName);
            this.insuranceCentreName = this.getValue(obj.insuranceCentreName);
            this.isInsuranceCentreAdmin = this.getValue(obj.isInsuranceCentreAdmin);
            this.insurancePolicyPaymentDocuments = this.getValue(obj.insurancePolicyPaymentDocuments);
            this.insurancePolicyConflict = this.getValue(obj.insurancePolicyConflict);
            this.insurancePolicyCondition = this.getValue(obj.insurancePolicyCondition);
            this.person = this.getValue(obj.person);
            this.insurancePolicy = this.getValue(obj.insurancePolicy);
            this.shoppingCard = this.getValue(obj.shoppingCard);
            this.shoppingCardPostalPacket = this.getValue(obj.shoppingCardPostalPacket);
        };

        InsuranceDataTravelInsurance.prototype = new BaseModel();
        InsuranceDataTravelInsurance.prototype.constructor = InsuranceDataTravelInsurance;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        InsuranceDataTravelInsurance.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                {
                    name: 'travelInsurancePolicyExtendView',
                    realName: 'travelInsurancePolicyExtendView',
                    type: 'TravelInsurancePolicyExtendView',
                },
                {
                    name: 'travelInsurancePolicyFilter',
                    realName: 'travelInsurancePolicyFilter',
                    type: 'TravelInsurancePolicyFilter',
                },
                { name: 'id', realName: 'id' },
                { name: 'selectedInsurancePolicyHasBeenChanged', realName: 'selectedInsurancePolicyHasBeenChanged' },
                { name: 'isPaymented', realName: 'isPaymented' },
                { name: 'payable', realName: 'payable' },
                { name: 'paymented', realName: 'paymented' },
                { name: 'conflict', realName: 'conflict' },
                { name: 'hasConflictDocument', realName: 'hasConflictDocument' },
                { name: 'initialPrice', realName: 'initialPrice' },
                { name: 'finalPrice', realName: 'finalPrice' },
                { name: 'insuranceCompanyName', realName: 'insuranceCompanyName' },
                { name: 'insuranceCentreName', realName: 'insuranceCentreName' },
                { name: 'isInsuranceCentreAdmin', realName: 'isInsuranceCentreAdmin' },
                { name: 'insurancePolicyPaymentDocuments', realName: 'insurancePolicyPaymentDocuments', array: true },
                { name: 'insurancePolicyConflict', realName: 'insurancePolicyConflict' },
                { name: 'insurancePolicyCondition', realName: 'insurancePolicyCondition' },
                { name: 'person', realName: 'person' },
                { name: 'insurancePolicy', realName: 'insurancePolicy' },
                { name: 'shoppingCard', realName: 'shoppingCard' },
                { name: 'shoppingCardPostalPacket', realName: 'shoppingCardPostalPacket' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        InsuranceDataTravelInsurance.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {TravelInsurancePolicyExtendView}
         */
        InsuranceDataTravelInsurance.prototype.getTravelInsurancePolicyExtendView = function () {
            return this.travelInsurancePolicyExtendView;
        };
    
        /**
         * Setter for TravelInsurancePolicyExtendView
         * 
         * @param {TravelInsurancePolicyExtendView} value 
         */
        InsuranceDataTravelInsurance.prototype.setTravelInsurancePolicyExtendView = function (value) {
            this.travelInsurancePolicyExtendView = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {TravelInsurancePolicyFilter}
         */
        InsuranceDataTravelInsurance.prototype.getTravelInsurancePolicyFilter = function () {
            return this.travelInsurancePolicyFilter;
        };
    
        /**
         * Setter for TravelInsurancePolicyFilter
         * 
         * @param {TravelInsurancePolicyFilter} value 
         */
        InsuranceDataTravelInsurance.prototype.setTravelInsurancePolicyFilter = function (value) {
            this.travelInsurancePolicyFilter = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceDataTravelInsurance.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        InsuranceDataTravelInsurance.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceDataTravelInsurance.prototype.getSelectedInsurancePolicyHasBeenChanged = function () {
            return this.selectedInsurancePolicyHasBeenChanged;
        };
    
        /**
         * Setter for SelectedInsurancePolicyHasBeenChanged
         * 
         * @param {bool} value 
         */
        InsuranceDataTravelInsurance.prototype.setSelectedInsurancePolicyHasBeenChanged = function (value) {
            this.selectedInsurancePolicyHasBeenChanged = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceDataTravelInsurance.prototype.getIsPaymented = function () {
            return this.isPaymented;
        };
    
        /**
         * Setter for IsPaymented
         * 
         * @param {bool} value 
         */
        InsuranceDataTravelInsurance.prototype.setIsPaymented = function (value) {
            this.isPaymented = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getPayable = function () {
            return this.payable;
        };
    
        /**
         * Setter for Payable
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setPayable = function (value) {
            this.payable = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getPaymented = function () {
            return this.paymented;
        };
    
        /**
         * Setter for Paymented
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setPaymented = function (value) {
            this.paymented = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getConflict = function () {
            return this.conflict;
        };
    
        /**
         * Setter for Conflict
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setConflict = function (value) {
            this.conflict = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceDataTravelInsurance.prototype.getHasConflictDocument = function () {
            return this.hasConflictDocument;
        };
    
        /**
         * Setter for HasConflictDocument
         * 
         * @param {bool} value 
         */
        InsuranceDataTravelInsurance.prototype.setHasConflictDocument = function (value) {
            this.hasConflictDocument = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInitialPrice = function () {
            return this.initialPrice;
        };
    
        /**
         * Setter for InitialPrice
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInitialPrice = function (value) {
            this.initialPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getFinalPrice = function () {
            return this.finalPrice;
        };
    
        /**
         * Setter for FinalPrice
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setFinalPrice = function (value) {
            this.finalPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInsuranceCompanyName = function () {
            return this.insuranceCompanyName;
        };
    
        /**
         * Setter for InsuranceCompanyName
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsuranceCompanyName = function (value) {
            this.insuranceCompanyName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInsuranceCentreName = function () {
            return this.insuranceCentreName;
        };
    
        /**
         * Setter for InsuranceCentreName
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsuranceCentreName = function (value) {
            this.insuranceCentreName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceDataTravelInsurance.prototype.getIsInsuranceCentreAdmin = function () {
            return this.isInsuranceCentreAdmin;
        };
    
        /**
         * Setter for IsInsuranceCentreAdmin
         * 
         * @param {bool} value 
         */
        InsuranceDataTravelInsurance.prototype.setIsInsuranceCentreAdmin = function (value) {
            this.isInsuranceCentreAdmin = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        InsuranceDataTravelInsurance.prototype.getInsurancePolicyPaymentDocuments = function () {
            return this.insurancePolicyPaymentDocuments;
        };
    
        /**
         * Setter for InsurancePolicyPaymentDocuments
         * 
         * @param {array} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsurancePolicyPaymentDocuments = function (value) {
            this.insurancePolicyPaymentDocuments = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInsurancePolicyConflict = function () {
            return this.insurancePolicyConflict;
        };
    
        /**
         * Setter for InsurancePolicyConflict
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsurancePolicyConflict = function (value) {
            this.insurancePolicyConflict = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInsurancePolicyCondition = function () {
            return this.insurancePolicyCondition;
        };
    
        /**
         * Setter for InsurancePolicyCondition
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsurancePolicyCondition = function (value) {
            this.insurancePolicyCondition = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getPerson = function () {
            return this.person;
        };
    
        /**
         * Setter for Person
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setPerson = function (value) {
            this.person = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getInsurancePolicy = function () {
            return this.insurancePolicy;
        };
    
        /**
         * Setter for InsurancePolicy
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setInsurancePolicy = function (value) {
            this.insurancePolicy = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getShoppingCard = function () {
            return this.shoppingCard;
        };
    
        /**
         * Setter for ShoppingCard
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setShoppingCard = function (value) {
            this.shoppingCard = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceDataTravelInsurance.prototype.getShoppingCardPostalPacket = function () {
            return this.shoppingCardPostalPacket;
        };
    
        /**
         * Setter for ShoppingCardPostalPacket
         * 
         * @param {string|null} value 
         */
        InsuranceDataTravelInsurance.prototype.setShoppingCardPostalPacket = function (value) {
            this.shoppingCardPostalPacket = value;
        };
    
        return InsuranceDataTravelInsurance;
    }

}(angular));
