/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of SummaryCard
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('SummaryCard', ['BaseModel', SummaryCardModel]);

    function SummaryCardModel(BaseModel) {
        var SummaryCard = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.articleType = this.getValue(obj.articleType);
            this.title = this.getValue(obj.title);
            this.summary = this.getValue(obj.summary);
            this.articleGroup = this.getValue(obj.articleGroup);
            this.metaMediaFileId = this.getValue(obj.metaMediaFileId);
            this.metaMediaFileUrl = this.getValue(obj.metaMediaFileUrl);
            this.publishPersianDate = this.getValue(obj.publishPersianDate);
        };

        SummaryCard.prototype = new BaseModel();
        SummaryCard.prototype.constructor = SummaryCard;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        SummaryCard.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'articleType', realName: 'articleType' },
                { name: 'title', realName: 'title' },
                { name: 'summary', realName: 'summary' },
                { name: 'articleGroup', realName: 'articleGroup' },
                { name: 'metaMediaFileId', realName: 'metaMediaFileId' },
                { name: 'metaMediaFileUrl', realName: 'metaMediaFileUrl' },
                { name: 'publishPersianDate', realName: 'publishPersianDate' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        SummaryCard.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        SummaryCard.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        SummaryCard.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        SummaryCard.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {int} value 
         */
        SummaryCard.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        SummaryCard.prototype.getArticleType = function () {
            return this.articleType;
        };
    
        /**
         * Setter for ArticleType
         * 
         * @param {int} value 
         */
        SummaryCard.prototype.setArticleType = function (value) {
            this.articleType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SummaryCard.prototype.getTitle = function () {
            return this.title;
        };
    
        /**
         * Setter for Title
         * 
         * @param {string} value 
         */
        SummaryCard.prototype.setTitle = function (value) {
            this.title = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SummaryCard.prototype.getSummary = function () {
            return this.summary;
        };
    
        /**
         * Setter for Summary
         * 
         * @param {string} value 
         */
        SummaryCard.prototype.setSummary = function (value) {
            this.summary = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SummaryCard.prototype.getArticleGroup = function () {
            return this.articleGroup;
        };
    
        /**
         * Setter for ArticleGroup
         * 
         * @param {string} value 
         */
        SummaryCard.prototype.setArticleGroup = function (value) {
            this.articleGroup = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        SummaryCard.prototype.getMetaMediaFileId = function () {
            return this.metaMediaFileId;
        };
    
        /**
         * Setter for MetaMediaFileId
         * 
         * @param {int} value 
         */
        SummaryCard.prototype.setMetaMediaFileId = function (value) {
            this.metaMediaFileId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SummaryCard.prototype.getMetaMediaFileUrl = function () {
            return this.metaMediaFileUrl;
        };
    
        /**
         * Setter for MetaMediaFileUrl
         * 
         * @param {string} value 
         */
        SummaryCard.prototype.setMetaMediaFileUrl = function (value) {
            this.metaMediaFileUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SummaryCard.prototype.getPublishPersianDate = function () {
            return this.publishPersianDate;
        };
    
        /**
         * Setter for PublishPersianDate
         * 
         * @param {string} value 
         */
        SummaryCard.prototype.setPublishPersianDate = function (value) {
            this.publishPersianDate = value;
        };
    
        return SummaryCard;
    }

}(angular));
