/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of VideoGallery
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('VideoGallery', ['BaseModel', VideoGalleryModel]);

    function VideoGalleryModel(BaseModel) {
        var VideoGallery = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.galleryType = this.getValue(obj.galleryType);
            this.title = this.getValue(obj.title);
            this.alt = this.getValue(obj.alt);
            this.description = this.getValue(obj.description);
            this.isActive = this.getValue(obj.isActive);
            this.isMain = this.getValue(obj.isMain);
            this.isAttachFile = this.getValue(obj.isAttachFile);
            this.sortPriority = this.getValue(obj.sortPriority);
            this.createOnPersianDate = this.getValue(obj.createOnPersianDate);
            this.metaMediaFileId = this.getValue(obj.metaMediaFileId);
            this.metaMediaFileUrl = this.getValue(obj.metaMediaFileUrl);
            this.metaMediaFileThumbnailUrl = this.getValue(obj.metaMediaFileThumbnailUrl);
            this.popupImageGalleryies = this.getValue(obj.popupImageGalleryies);
            this.galleryDetails = this.getValue(obj.galleryDetails);
        };

        VideoGallery.prototype = new BaseModel();
        VideoGallery.prototype.constructor = VideoGallery;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        VideoGallery.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'galleryType', realName: 'galleryType' },
                { name: 'title', realName: 'title' },
                { name: 'alt', realName: 'alt' },
                { name: 'description', realName: 'description' },
                { name: 'isActive', realName: 'isActive' },
                { name: 'isMain', realName: 'isMain' },
                { name: 'isAttachFile', realName: 'isAttachFile' },
                { name: 'sortPriority', realName: 'sortPriority' },
                { name: 'createOnPersianDate', realName: 'createOnPersianDate' },
                { name: 'metaMediaFileId', realName: 'metaMediaFileId' },
                { name: 'metaMediaFileUrl', realName: 'metaMediaFileUrl' },
                { name: 'metaMediaFileThumbnailUrl', realName: 'metaMediaFileThumbnailUrl' },
                { name: 'popupImageGalleryies', realName: 'popupImageGalleryies', array: true },
                { name: 'galleryDetails', realName: 'galleryDetails', array: true }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        VideoGallery.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        VideoGallery.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        VideoGallery.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        VideoGallery.prototype.getGalleryType = function () {
            return this.galleryType;
        };
    
        /**
         * Setter for GalleryType
         * 
         * @param {int} value 
         */
        VideoGallery.prototype.setGalleryType = function (value) {
            this.galleryType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        VideoGallery.prototype.getTitle = function () {
            return this.title;
        };
    
        /**
         * Setter for Title
         * 
         * @param {string} value 
         */
        VideoGallery.prototype.setTitle = function (value) {
            this.title = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        VideoGallery.prototype.getAlt = function () {
            return this.alt;
        };
    
        /**
         * Setter for Alt
         * 
         * @param {string|null} value 
         */
        VideoGallery.prototype.setAlt = function (value) {
            this.alt = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        VideoGallery.prototype.getDescription = function () {
            return this.description;
        };
    
        /**
         * Setter for Description
         * 
         * @param {string|null} value 
         */
        VideoGallery.prototype.setDescription = function (value) {
            this.description = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        VideoGallery.prototype.getIsActive = function () {
            return this.isActive;
        };
    
        /**
         * Setter for IsActive
         * 
         * @param {bool} value 
         */
        VideoGallery.prototype.setIsActive = function (value) {
            this.isActive = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        VideoGallery.prototype.getIsMain = function () {
            return this.isMain;
        };
    
        /**
         * Setter for IsMain
         * 
         * @param {bool} value 
         */
        VideoGallery.prototype.setIsMain = function (value) {
            this.isMain = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        VideoGallery.prototype.getIsAttachFile = function () {
            return this.isAttachFile;
        };
    
        /**
         * Setter for IsAttachFile
         * 
         * @param {bool} value 
         */
        VideoGallery.prototype.setIsAttachFile = function (value) {
            this.isAttachFile = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        VideoGallery.prototype.getSortPriority = function () {
            return this.sortPriority;
        };
    
        /**
         * Setter for SortPriority
         * 
         * @param {string|null} value 
         */
        VideoGallery.prototype.setSortPriority = function (value) {
            this.sortPriority = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        VideoGallery.prototype.getCreateOnPersianDate = function () {
            return this.createOnPersianDate;
        };
    
        /**
         * Setter for CreateOnPersianDate
         * 
         * @param {string} value 
         */
        VideoGallery.prototype.setCreateOnPersianDate = function (value) {
            this.createOnPersianDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        VideoGallery.prototype.getMetaMediaFileId = function () {
            return this.metaMediaFileId;
        };
    
        /**
         * Setter for MetaMediaFileId
         * 
         * @param {int} value 
         */
        VideoGallery.prototype.setMetaMediaFileId = function (value) {
            this.metaMediaFileId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        VideoGallery.prototype.getMetaMediaFileUrl = function () {
            return this.metaMediaFileUrl;
        };
    
        /**
         * Setter for MetaMediaFileUrl
         * 
         * @param {string} value 
         */
        VideoGallery.prototype.setMetaMediaFileUrl = function (value) {
            this.metaMediaFileUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        VideoGallery.prototype.getMetaMediaFileThumbnailUrl = function () {
            return this.metaMediaFileThumbnailUrl;
        };
    
        /**
         * Setter for MetaMediaFileThumbnailUrl
         * 
         * @param {string|null} value 
         */
        VideoGallery.prototype.setMetaMediaFileThumbnailUrl = function (value) {
            this.metaMediaFileThumbnailUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        VideoGallery.prototype.getPopupImageGalleryies = function () {
            return this.popupImageGalleryies;
        };
    
        /**
         * Setter for PopupImageGalleryies
         * 
         * @param {array} value 
         */
        VideoGallery.prototype.setPopupImageGalleryies = function (value) {
            this.popupImageGalleryies = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        VideoGallery.prototype.getGalleryDetails = function () {
            return this.galleryDetails;
        };
    
        /**
         * Setter for GalleryDetails
         * 
         * @param {array} value 
         */
        VideoGallery.prototype.setGalleryDetails = function (value) {
            this.galleryDetails = value;
        };
    
        return VideoGallery;
    }

}(angular));
