/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of PopupImageGalleryie
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('PopupImageGalleryie', ['BaseModel', PopupImageGalleryieModel]);

    function PopupImageGalleryieModel(BaseModel) {
        var PopupImageGalleryie = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.cached = this.getValue(obj.cached);
            this.url = this.getValue(obj.url);
            this.thumbnailUrl = this.getValue(obj.thumbnailUrl);
            this.altText = this.getValue(obj.altText);
            this.title = this.getValue(obj.title);
            this.extUrl = this.getValue(obj.extUrl);
            this.extUrlTarget = this.getValue(obj.extUrlTarget);
        };

        PopupImageGalleryie.prototype = new BaseModel();
        PopupImageGalleryie.prototype.constructor = PopupImageGalleryie;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        PopupImageGalleryie.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'cached', realName: '_cached' },
                { name: 'url', realName: 'url' },
                { name: 'thumbnailUrl', realName: 'thumbnailUrl' },
                { name: 'altText', realName: 'altText' },
                { name: 'title', realName: 'title' },
                { name: 'extUrl', realName: 'extUrl' },
                { name: 'extUrlTarget', realName: 'extUrlTarget' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        PopupImageGalleryie.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        PopupImageGalleryie.prototype.getCached = function () {
            return this.cached;
        };
    
        /**
         * Setter for Cached
         * 
         * @param {bool} value 
         */
        PopupImageGalleryie.prototype.setCached = function (value) {
            this.cached = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        PopupImageGalleryie.prototype.getUrl = function () {
            return this.url;
        };
    
        /**
         * Setter for Url
         * 
         * @param {string} value 
         */
        PopupImageGalleryie.prototype.setUrl = function (value) {
            this.url = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        PopupImageGalleryie.prototype.getThumbnailUrl = function () {
            return this.thumbnailUrl;
        };
    
        /**
         * Setter for ThumbnailUrl
         * 
         * @param {string} value 
         */
        PopupImageGalleryie.prototype.setThumbnailUrl = function (value) {
            this.thumbnailUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        PopupImageGalleryie.prototype.getAltText = function () {
            return this.altText;
        };
    
        /**
         * Setter for AltText
         * 
         * @param {string|null} value 
         */
        PopupImageGalleryie.prototype.setAltText = function (value) {
            this.altText = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        PopupImageGalleryie.prototype.getTitle = function () {
            return this.title;
        };
    
        /**
         * Setter for Title
         * 
         * @param {string|null} value 
         */
        PopupImageGalleryie.prototype.setTitle = function (value) {
            this.title = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        PopupImageGalleryie.prototype.getExtUrl = function () {
            return this.extUrl;
        };
    
        /**
         * Setter for ExtUrl
         * 
         * @param {string|null} value 
         */
        PopupImageGalleryie.prototype.setExtUrl = function (value) {
            this.extUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        PopupImageGalleryie.prototype.getExtUrlTarget = function () {
            return this.extUrlTarget;
        };
    
        /**
         * Setter for ExtUrlTarget
         * 
         * @param {string|null} value 
         */
        PopupImageGalleryie.prototype.setExtUrlTarget = function (value) {
            this.extUrlTarget = value;
        };
    
        return PopupImageGalleryie;
    }

}(angular));
