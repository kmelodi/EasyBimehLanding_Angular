/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ElectronicEquipmentInsurancePolicyExtendView
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('ElectronicEquipmentInsurancePolicyExtendView',
        ['BaseModel',         ElectronicEquipmentInsurancePolicyExtendViewModel
    ]);

    function ElectronicEquipmentInsurancePolicyExtendViewModel(BaseModel) {
        var ElectronicEquipmentInsurancePolicyExtendView = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.deviceTypeId = this.getValue(obj.deviceTypeId);
            this.deviceBrandId = this.getValue(obj.deviceBrandId);
            this.deviceModelId = this.getValue(obj.deviceModelId);
            this.deviceSerial = this.getValue(obj.deviceSerial);
            this.buildYear = this.getValue(obj.buildYear);
            this.deviceValue = this.getValue(obj.deviceValue);
            this.franchisee = this.getValue(obj.franchisee);
            this.hasWarranty = this.getValue(obj.hasWarranty);
            this.warrantyCompany = this.getValue(obj.warrantyCompany);
            this.serialInsuranceCard = this.getValue(obj.serialInsuranceCard);
            this.metaMediaBehindDeviceId = this.getValue(obj.metaMediaBehindDeviceId);
            this.metaMediaBehindDeviceUrl = this.getValue(obj.metaMediaBehindDeviceUrl);
            this.metaMediaOnDeviceId = this.getValue(obj.metaMediaOnDeviceId);
            this.metaMediaOnDeviceUrl = this.getValue(obj.metaMediaOnDeviceUrl);
            this.metaMediaDeviceBoxId = this.getValue(obj.metaMediaDeviceBoxId);
            this.metaMediaDeviceBoxUrl = this.getValue(obj.metaMediaDeviceBoxUrl);
            this.insuranceCoverageIds = this.getValue(obj.insuranceCoverageIds);
            this.insuranceCoveragePrice = this.getValue(obj.insuranceCoveragePrice);
            this.basePremium = this.getValue(obj.basePremium);
            this.allPremium = this.getValue(obj.allPremium);
            this.insuranceCompanyDiscountRate = this.getValue(obj.insuranceCompanyDiscountRate);
            this.insuranceCompanyDiscount = this.getValue(obj.insuranceCompanyDiscount);
            this.insuranceCentreDiscount = this.getValue(obj.insuranceCentreDiscount);
            this.coupenDiscount = this.getValue(obj.coupenDiscount);
            this.allDiscount = this.getValue(obj.allDiscount);
            this.exchangePremium = this.getValue(obj.exchangePremium);
            this.deviceTypeTitle = this.getValue(obj.deviceTypeTitle);
            this.deviceBrandTitle = this.getValue(obj.deviceBrandTitle);
            this.deviceModelTitle = this.getValue(obj.deviceModelTitle);
        };

        ElectronicEquipmentInsurancePolicyExtendView.prototype = new BaseModel();
        ElectronicEquipmentInsurancePolicyExtendView.prototype.constructor = ElectronicEquipmentInsurancePolicyExtendView;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'deviceTypeId', realName: 'deviceTypeId' },
                { name: 'deviceBrandId', realName: 'deviceBrandId' },
                { name: 'deviceModelId', realName: 'deviceModelId' },
                { name: 'deviceSerial', realName: 'deviceSerial' },
                { name: 'buildYear', realName: 'buildYear' },
                { name: 'deviceValue', realName: 'deviceValue' },
                { name: 'franchisee', realName: 'franchisee' },
                { name: 'hasWarranty', realName: 'hasWarranty' },
                { name: 'warrantyCompany', realName: 'warrantyCompany' },
                { name: 'serialInsuranceCard', realName: 'serialInsuranceCard' },
                { name: 'metaMediaBehindDeviceId', realName: 'metaMediaBehindDeviceId' },
                { name: 'metaMediaBehindDeviceUrl', realName: 'metaMediaBehindDeviceUrl' },
                { name: 'metaMediaOnDeviceId', realName: 'metaMediaOnDeviceId' },
                { name: 'metaMediaOnDeviceUrl', realName: 'metaMediaOnDeviceUrl' },
                { name: 'metaMediaDeviceBoxId', realName: 'metaMediaDeviceBoxId' },
                { name: 'metaMediaDeviceBoxUrl', realName: 'metaMediaDeviceBoxUrl' },
                { name: 'insuranceCoverageIds', realName: '_InsuranceCoverageIds' },
                { name: 'insuranceCoveragePrice', realName: 'insuranceCoveragePrice' },
                { name: 'basePremium', realName: 'basePremium' },
                { name: 'allPremium', realName: 'allPremium' },
                { name: 'insuranceCompanyDiscountRate', realName: 'insuranceCompanyDiscountRate' },
                { name: 'insuranceCompanyDiscount', realName: 'insuranceCompanyDiscount' },
                { name: 'insuranceCentreDiscount', realName: 'insuranceCentreDiscount' },
                { name: 'coupenDiscount', realName: 'coupenDiscount' },
                { name: 'allDiscount', realName: 'allDiscount' },
                { name: 'exchangePremium', realName: 'exchangePremium' },
                { name: 'deviceTypeTitle', realName: 'deviceTypeTitle' },
                { name: 'deviceBrandTitle', realName: 'deviceBrandTitle' },
                { name: 'deviceModelTitle', realName: 'deviceModelTitle' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * شناسه ی نوع دستگاه
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceTypeId = function () {
            return this.deviceTypeId;
        };
    
        /**
         * Setter for DeviceTypeId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceTypeId = function (value) {
            this.deviceTypeId = value;
        };
    
        /**
         * شناسه ی برند دستگاه
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceBrandId = function () {
            return this.deviceBrandId;
        };
    
        /**
         * Setter for DeviceBrandId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceBrandId = function (value) {
            this.deviceBrandId = value;
        };
    
        /**
         * شناسه ی مدل دستگاه
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceModelId = function () {
            return this.deviceModelId;
        };
    
        /**
         * Setter for DeviceModelId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceModelId = function (value) {
            this.deviceModelId = value;
        };
    
        /**
         * سریال دستگاه
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceSerial = function () {
            return this.deviceSerial;
        };
    
        /**
         * Setter for DeviceSerial
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceSerial = function (value) {
            this.deviceSerial = value;
        };
    
        /**
         * سال ساخت دستگاه
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getBuildYear = function () {
            return this.buildYear;
        };
    
        /**
         * Setter for BuildYear
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setBuildYear = function (value) {
            this.buildYear = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceValue = function () {
            return this.deviceValue;
        };
    
        /**
         * Setter for DeviceValue
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceValue = function (value) {
            this.deviceValue = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getFranchisee = function () {
            return this.franchisee;
        };
    
        /**
         * Setter for Franchisee
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setFranchisee = function (value) {
            this.franchisee = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getHasWarranty = function () {
            return this.hasWarranty;
        };
    
        /**
         * Setter for HasWarranty
         * 
         * @param {bool|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setHasWarranty = function (value) {
            this.hasWarranty = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getWarrantyCompany = function () {
            return this.warrantyCompany;
        };
    
        /**
         * Setter for WarrantyCompany
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setWarrantyCompany = function (value) {
            this.warrantyCompany = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getSerialInsuranceCard = function () {
            return this.serialInsuranceCard;
        };
    
        /**
         * Setter for SerialInsuranceCard
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setSerialInsuranceCard = function (value) {
            this.serialInsuranceCard = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {long|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaBehindDeviceId = function () {
            return this.metaMediaBehindDeviceId;
        };
    
        /**
         * Setter for MetaMediaBehindDeviceId
         * 
         * @param {long|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaBehindDeviceId = function (value) {
            this.metaMediaBehindDeviceId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaBehindDeviceUrl = function () {
            return this.metaMediaBehindDeviceUrl;
        };
    
        /**
         * Setter for MetaMediaBehindDeviceUrl
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaBehindDeviceUrl = function (value) {
            this.metaMediaBehindDeviceUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {long|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaOnDeviceId = function () {
            return this.metaMediaOnDeviceId;
        };
    
        /**
         * Setter for MetaMediaOnDeviceId
         * 
         * @param {long|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaOnDeviceId = function (value) {
            this.metaMediaOnDeviceId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaOnDeviceUrl = function () {
            return this.metaMediaOnDeviceUrl;
        };
    
        /**
         * Setter for MetaMediaOnDeviceUrl
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaOnDeviceUrl = function (value) {
            this.metaMediaOnDeviceUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {long|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaDeviceBoxId = function () {
            return this.metaMediaDeviceBoxId;
        };
    
        /**
         * Setter for MetaMediaDeviceBoxId
         * 
         * @param {long|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaDeviceBoxId = function (value) {
            this.metaMediaDeviceBoxId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getMetaMediaDeviceBoxUrl = function () {
            return this.metaMediaDeviceBoxUrl;
        };
    
        /**
         * Setter for MetaMediaDeviceBoxUrl
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setMetaMediaDeviceBoxUrl = function (value) {
            this.metaMediaDeviceBoxUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getInsuranceCoverageIds = function () {
            return this.insuranceCoverageIds;
        };
    
        /**
         * Setter for InsuranceCoverageIds
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setInsuranceCoverageIds = function (value) {
            this.insuranceCoverageIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getInsuranceCoveragePrice = function () {
            return this.insuranceCoveragePrice;
        };
    
        /**
         * Setter for InsuranceCoveragePrice
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setInsuranceCoveragePrice = function (value) {
            this.insuranceCoveragePrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getBasePremium = function () {
            return this.basePremium;
        };
    
        /**
         * Setter for BasePremium
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setBasePremium = function (value) {
            this.basePremium = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getAllPremium = function () {
            return this.allPremium;
        };
    
        /**
         * Setter for AllPremium
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setAllPremium = function (value) {
            this.allPremium = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getInsuranceCompanyDiscountRate = function () {
            return this.insuranceCompanyDiscountRate;
        };
    
        /**
         * Setter for InsuranceCompanyDiscountRate
         * 
         * @param {string} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setInsuranceCompanyDiscountRate = function (value) {
            this.insuranceCompanyDiscountRate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getInsuranceCompanyDiscount = function () {
            return this.insuranceCompanyDiscount;
        };
    
        /**
         * Setter for InsuranceCompanyDiscount
         * 
         * @param {int} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setInsuranceCompanyDiscount = function (value) {
            this.insuranceCompanyDiscount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getInsuranceCentreDiscount = function () {
            return this.insuranceCentreDiscount;
        };
    
        /**
         * Setter for InsuranceCentreDiscount
         * 
         * @param {int} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setInsuranceCentreDiscount = function (value) {
            this.insuranceCentreDiscount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getCoupenDiscount = function () {
            return this.coupenDiscount;
        };
    
        /**
         * Setter for CoupenDiscount
         * 
         * @param {int} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setCoupenDiscount = function (value) {
            this.coupenDiscount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getAllDiscount = function () {
            return this.allDiscount;
        };
    
        /**
         * Setter for AllDiscount
         * 
         * @param {int} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setAllDiscount = function (value) {
            this.allDiscount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getExchangePremium = function () {
            return this.exchangePremium;
        };
    
        /**
         * Setter for ExchangePremium
         * 
         * @param {int} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setExchangePremium = function (value) {
            this.exchangePremium = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceTypeTitle = function () {
            return this.deviceTypeTitle;
        };
    
        /**
         * Setter for DeviceTypeTitle
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceTypeTitle = function (value) {
            this.deviceTypeTitle = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceBrandTitle = function () {
            return this.deviceBrandTitle;
        };
    
        /**
         * Setter for DeviceBrandTitle
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceBrandTitle = function (value) {
            this.deviceBrandTitle = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.getDeviceModelTitle = function () {
            return this.deviceModelTitle;
        };
    
        /**
         * Setter for DeviceModelTitle
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyExtendView.prototype.setDeviceModelTitle = function (value) {
            this.deviceModelTitle = value;
        };
    
        return ElectronicEquipmentInsurancePolicyExtendView;
    }

}(angular));
