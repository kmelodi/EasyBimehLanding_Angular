/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of FireInsurancePolicyFilter
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('FireInsurancePolicyFilter', ['BaseModel', FireInsurancePolicyFilterModel]);

    function FireInsurancePolicyFilterModel(BaseModel) {
        var FireInsurancePolicyFilter = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.insurancePolicyType = this.getValue(obj.insurancePolicyType);
            this.insuranceExtraCoverageIds = this.getValue(obj.insuranceExtraCoverageIds);
            this.valuePerSquareMeterCoverageRateId = this.getValue(obj.valuePerSquareMeterCoverageRateId);
            this.valueOfAppliancesFurnishing = this.getValue(obj.valueOfAppliancesFurnishing);
            this.cityId = this.getValue(obj.cityId);
            this.skeletonTypeId = this.getValue(obj.skeletonTypeId);
            this.buildingTypeId = this.getValue(obj.buildingTypeId);
            this.buildingArea = this.getValue(obj.buildingArea);
            this.onlyAppliancesFurnishings = this.getValue(obj.onlyAppliancesFurnishings);
            this.policyTermId = this.getValue(obj.policyTermId);
            this.insuranceCentreSubDomainName = this.getValue(obj.insuranceCentreSubDomainName);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.insuranceCompanyId = this.getValue(obj.insuranceCompanyId);
            this.giftCode = this.getValue(obj.giftCode);
            this.customerUserId = this.getValue(obj.customerUserId);
        };

        FireInsurancePolicyFilter.prototype = new BaseModel();
        FireInsurancePolicyFilter.prototype.constructor = FireInsurancePolicyFilter;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        FireInsurancePolicyFilter.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'insurancePolicyType', realName: 'insurancePolicyType' },
                { name: 'insuranceExtraCoverageIds', realName: 'insuranceExtraCoverageIds' },
                { name: 'valuePerSquareMeterCoverageRateId', realName: 'valuePerSquareMeterCoverageRateId' },
                { name: 'valueOfAppliancesFurnishing', realName: 'valueOfAppliancesFurnishing' },
                { name: 'cityId', realName: 'cityId' },
                { name: 'skeletonTypeId', realName: 'skeletonTypeId' },
                { name: 'buildingTypeId', realName: 'buildingTypeId' },
                { name: 'buildingArea', realName: 'buildingArea' },
                { name: 'onlyAppliancesFurnishings', realName: 'onlyAppliancesFurnishings' },
                { name: 'policyTermId', realName: 'policyTermId' },
                { name: 'insuranceCentreSubDomainName', realName: 'insuranceCentreSubDomainName' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'insuranceCompanyId', realName: 'insuranceCompanyId' },
                { name: 'giftCode', realName: 'giftCode' },
                { name: 'customerUserId', realName: 'customerUserId' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        FireInsurancePolicyFilter.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getInsurancePolicyType = function () {
            return this.insurancePolicyType;
        };
    
        /**
         * Setter for InsurancePolicyType
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setInsurancePolicyType = function (value) {
            this.insurancePolicyType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getInsuranceExtraCoverageIds = function () {
            return this.insuranceExtraCoverageIds;
        };
    
        /**
         * Setter for InsuranceExtraCoverageIds
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setInsuranceExtraCoverageIds = function (value) {
            this.insuranceExtraCoverageIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getValuePerSquareMeterCoverageRateId = function () {
            return this.valuePerSquareMeterCoverageRateId;
        };
    
        /**
         * Setter for ValuePerSquareMeterCoverageRateId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setValuePerSquareMeterCoverageRateId = function (value) {
            this.valuePerSquareMeterCoverageRateId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getValueOfAppliancesFurnishing = function () {
            return this.valueOfAppliancesFurnishing;
        };
    
        /**
         * Setter for ValueOfAppliancesFurnishing
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setValueOfAppliancesFurnishing = function (value) {
            this.valueOfAppliancesFurnishing = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getCityId = function () {
            return this.cityId;
        };
    
        /**
         * Setter for CityId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setCityId = function (value) {
            this.cityId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getSkeletonTypeId = function () {
            return this.skeletonTypeId;
        };
    
        /**
         * Setter for SkeletonTypeId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setSkeletonTypeId = function (value) {
            this.skeletonTypeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        FireInsurancePolicyFilter.prototype.getBuildingTypeId = function () {
            return this.buildingTypeId;
        };
    
        /**
         * Setter for BuildingTypeId
         * 
         * @param {int} value 
         */
        FireInsurancePolicyFilter.prototype.setBuildingTypeId = function (value) {
            this.buildingTypeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getBuildingArea = function () {
            return this.buildingArea;
        };
    
        /**
         * Setter for BuildingArea
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setBuildingArea = function (value) {
            this.buildingArea = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getOnlyAppliancesFurnishings = function () {
            return this.onlyAppliancesFurnishings;
        };
    
        /**
         * Setter for OnlyAppliancesFurnishings
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setOnlyAppliancesFurnishings = function (value) {
            this.onlyAppliancesFurnishings = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getPolicyTermId = function () {
            return this.policyTermId;
        };
    
        /**
         * Setter for PolicyTermId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setPolicyTermId = function (value) {
            this.policyTermId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getInsuranceCentreSubDomainName = function () {
            return this.insuranceCentreSubDomainName;
        };
    
        /**
         * Setter for InsuranceCentreSubDomainName
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setInsuranceCentreSubDomainName = function (value) {
            this.insuranceCentreSubDomainName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getInsuranceCompanyId = function () {
            return this.insuranceCompanyId;
        };
    
        /**
         * Setter for InsuranceCompanyId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setInsuranceCompanyId = function (value) {
            this.insuranceCompanyId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getGiftCode = function () {
            return this.giftCode;
        };
    
        /**
         * Setter for GiftCode
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setGiftCode = function (value) {
            this.giftCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        FireInsurancePolicyFilter.prototype.getCustomerUserId = function () {
            return this.customerUserId;
        };
    
        /**
         * Setter for CustomerUserId
         * 
         * @param {string|null} value 
         */
        FireInsurancePolicyFilter.prototype.setCustomerUserId = function (value) {
            this.customerUserId = value;
        };
    
        return FireInsurancePolicyFilter;
    }

}(angular));
