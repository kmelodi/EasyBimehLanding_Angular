/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of TrackingCode
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('TrackingCode', ['BaseModel', TrackingCodeModel]);

    function TrackingCodeModel(BaseModel) {
        var TrackingCode = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.insuranceTypeId = this.getValue(obj.insuranceTypeId);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.insuranceCentreName = this.getValue(obj.insuranceCentreName);
            this.insuranceCompanyId = this.getValue(obj.insuranceCompanyId);
            this.insuranceCompanyTitle = this.getValue(obj.insuranceCompanyTitle);
            this.insurancePolicyNumber = this.getValue(obj.insurancePolicyNumber);
            this.personalityType = this.getValue(obj.personalityType);
            this.damageType = this.getValue(obj.damageType);
            this.name = this.getValue(obj.name);
            this.nationalCode = this.getValue(obj.nationalCode);
            this.mobile = this.getValue(obj.mobile);
            this.insuredProfile = this.getValue(obj.insuredProfile);
            this.refrencedUser = this.getValue(obj.refrencedUser);
            this.referenceCount = this.getValue(obj.referenceCount);
            this.trackingCode = this.getValue(obj.trackingCode);
            this.paymentType = this.getValue(obj.paymentType);
            this.paymentDate = this.getValue(obj.paymentDate);
            this.paymentPersianDate = this.getValue(obj.paymentPersianDate);
            this.subDomain = this.getValue(obj.subDomain);
            this.insuranceTypeTitle = this.getValue(obj.insuranceTypeTitle);
            this.createOn = this.getValue(obj.createOn);
            this.updateOn = this.getValue(obj.updateOn);
            this.createOnPersianDate = this.getValue(obj.createOnPersianDate);
            this.updateOnPersianDate = this.getValue(obj.updateOnPersianDate);
            this.trackingDamageStatus = this.getValue(obj.trackingDamageStatus);
        };

        TrackingCode.prototype = new BaseModel();
        TrackingCode.prototype.constructor = TrackingCode;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        TrackingCode.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'insuranceTypeId', realName: 'insuranceTypeId' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'insuranceCentreName', realName: 'insuranceCentreName' },
                { name: 'insuranceCompanyId', realName: 'insuranceCompanyId' },
                { name: 'insuranceCompanyTitle', realName: 'insuranceCompanyTitle' },
                { name: 'insurancePolicyNumber', realName: 'insurancePolicyNumber' },
                { name: 'personalityType', realName: 'personalityType' },
                { name: 'damageType', realName: 'damageType' },
                { name: 'name', realName: 'name' },
                { name: 'nationalCode', realName: 'nationalCode' },
                { name: 'mobile', realName: 'mobile' },
                { name: 'insuredProfile', realName: 'insuredProfile' },
                { name: 'refrencedUser', realName: 'refrencedUser' },
                { name: 'referenceCount', realName: 'referenceCount' },
                { name: 'trackingCode', realName: 'trackingCode' },
                { name: 'paymentType', realName: 'paymentType' },
                { name: 'paymentDate', realName: 'paymentDate' },
                { name: 'paymentPersianDate', realName: 'paymentPersianDate' },
                { name: 'subDomain', realName: 'subDomain' },
                { name: 'insuranceTypeTitle', realName: 'insuranceTypeTitle' },
                { name: 'createOn', realName: 'createOn' },
                { name: 'updateOn', realName: 'updateOn' },
                { name: 'createOnPersianDate', realName: 'createOnPersianDate' },
                { name: 'updateOnPersianDate', realName: 'updateOnPersianDate' },
                {
                    name: 'trackingDamageStatus',
                    realName: 'trackingDamageStatus',
                    array: true,
                    type: 'TrackingDamageStatusTrackingCode',
                }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        TrackingCode.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingCode.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        TrackingCode.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingCode.prototype.getInsuranceTypeId = function () {
            return this.insuranceTypeId;
        };
    
        /**
         * Setter for InsuranceTypeId
         * 
         * @param {int} value 
         */
        TrackingCode.prototype.setInsuranceTypeId = function (value) {
            this.insuranceTypeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingCode.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {int} value 
         */
        TrackingCode.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getInsuranceCentreName = function () {
            return this.insuranceCentreName;
        };
    
        /**
         * Setter for InsuranceCentreName
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setInsuranceCentreName = function (value) {
            this.insuranceCentreName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingCode.prototype.getInsuranceCompanyId = function () {
            return this.insuranceCompanyId;
        };
    
        /**
         * Setter for InsuranceCompanyId
         * 
         * @param {int} value 
         */
        TrackingCode.prototype.setInsuranceCompanyId = function (value) {
            this.insuranceCompanyId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getInsuranceCompanyTitle = function () {
            return this.insuranceCompanyTitle;
        };
    
        /**
         * Setter for InsuranceCompanyTitle
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setInsuranceCompanyTitle = function (value) {
            this.insuranceCompanyTitle = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getInsurancePolicyNumber = function () {
            return this.insurancePolicyNumber;
        };
    
        /**
         * Setter for InsurancePolicyNumber
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setInsurancePolicyNumber = function (value) {
            this.insurancePolicyNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        TrackingCode.prototype.getPersonalityType = function () {
            return this.personalityType;
        };
    
        /**
         * Setter for PersonalityType
         * 
         * @param {int} value 
         */
        TrackingCode.prototype.setPersonalityType = function (value) {
            this.personalityType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getDamageType = function () {
            return this.damageType;
        };
    
        /**
         * Setter for DamageType
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setDamageType = function (value) {
            this.damageType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getName = function () {
            return this.name;
        };
    
        /**
         * Setter for Name
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setName = function (value) {
            this.name = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getNationalCode = function () {
            return this.nationalCode;
        };
    
        /**
         * Setter for NationalCode
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setNationalCode = function (value) {
            this.nationalCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getMobile = function () {
            return this.mobile;
        };
    
        /**
         * Setter for Mobile
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setMobile = function (value) {
            this.mobile = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getInsuredProfile = function () {
            return this.insuredProfile;
        };
    
        /**
         * Setter for InsuredProfile
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setInsuredProfile = function (value) {
            this.insuredProfile = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getRefrencedUser = function () {
            return this.refrencedUser;
        };
    
        /**
         * Setter for RefrencedUser
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setRefrencedUser = function (value) {
            this.refrencedUser = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getReferenceCount = function () {
            return this.referenceCount;
        };
    
        /**
         * Setter for ReferenceCount
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setReferenceCount = function (value) {
            this.referenceCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getTrackingCode = function () {
            return this.trackingCode;
        };
    
        /**
         * Setter for TrackingCode
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setTrackingCode = function (value) {
            this.trackingCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getPaymentType = function () {
            return this.paymentType;
        };
    
        /**
         * Setter for PaymentType
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setPaymentType = function (value) {
            this.paymentType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getPaymentDate = function () {
            return this.paymentDate;
        };
    
        /**
         * Setter for PaymentDate
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setPaymentDate = function (value) {
            this.paymentDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getPaymentPersianDate = function () {
            return this.paymentPersianDate;
        };
    
        /**
         * Setter for PaymentPersianDate
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setPaymentPersianDate = function (value) {
            this.paymentPersianDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getSubDomain = function () {
            return this.subDomain;
        };
    
        /**
         * Setter for SubDomain
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setSubDomain = function (value) {
            this.subDomain = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getInsuranceTypeTitle = function () {
            return this.insuranceTypeTitle;
        };
    
        /**
         * Setter for InsuranceTypeTitle
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setInsuranceTypeTitle = function (value) {
            this.insuranceTypeTitle = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getCreateOn = function () {
            return this.createOn;
        };
    
        /**
         * Setter for CreateOn
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setCreateOn = function (value) {
            this.createOn = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TrackingCode.prototype.getUpdateOn = function () {
            return this.updateOn;
        };
    
        /**
         * Setter for UpdateOn
         * 
         * @param {string|null} value 
         */
        TrackingCode.prototype.setUpdateOn = function (value) {
            this.updateOn = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getCreateOnPersianDate = function () {
            return this.createOnPersianDate;
        };
    
        /**
         * Setter for CreateOnPersianDate
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setCreateOnPersianDate = function (value) {
            this.createOnPersianDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        TrackingCode.prototype.getUpdateOnPersianDate = function () {
            return this.updateOnPersianDate;
        };
    
        /**
         * Setter for UpdateOnPersianDate
         * 
         * @param {string} value 
         */
        TrackingCode.prototype.setUpdateOnPersianDate = function (value) {
            this.updateOnPersianDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        TrackingCode.prototype.getTrackingDamageStatus = function () {
            return this.trackingDamageStatus;
        };
    
        /**
         * Setter for TrackingDamageStatus
         * 
         * @param {array} value 
         */
        TrackingCode.prototype.setTrackingDamageStatus = function (value) {
            this.trackingDamageStatus = value;
        };
    
        return TrackingCode;
    }

}(angular));
