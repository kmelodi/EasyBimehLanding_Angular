/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ElectronicEquipmentInsurance
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('ElectronicEquipmentInsurance', ['BaseModel', ElectronicEquipmentInsuranceModel]);

    function ElectronicEquipmentInsuranceModel(BaseModel) {
        var ElectronicEquipmentInsurance = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.hasPlan = this.getValue(obj.hasPlan);
            this.franchisees = this.getValue(obj.franchisees);
            this.deviceTypes = this.getValue(obj.deviceTypes);
            this.deviceBrands = this.getValue(obj.deviceBrands);
            this.deviceModels = this.getValue(obj.deviceModels);
            this.insuranceCompanies = this.getValue(obj.insuranceCompanies);
            this.insuranceExtraCoverage = this.getValue(obj.insuranceExtraCoverage);
            this.insurancePolicyTerms = this.getValue(obj.insurancePolicyTerms);
            this.provinces = this.getValue(obj.provinces);
            this.cities = this.getValue(obj.cities);
            this.cityRegions = this.getValue(obj.cityRegions);
            this.shippingTypes = this.getValue(obj.shippingTypes);
            this.postTypes = this.getValue(obj.postTypes);
            this.insurancePolicyCondition = this.getValue(obj.insurancePolicyCondition);
            this.insuranceData = this.getValue(obj.insuranceData);
        };

        ElectronicEquipmentInsurance.prototype = new BaseModel();
        ElectronicEquipmentInsurance.prototype.constructor = ElectronicEquipmentInsurance;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ElectronicEquipmentInsurance.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'hasPlan', realName: 'hasPlan' },
                { name: 'franchisees', realName: 'franchisees', array: true, type: 'Franchisee' },
                { name: 'deviceTypes', realName: 'deviceTypes', array: true, type: 'DeviceType' },
                { name: 'deviceBrands', realName: 'deviceBrands', array: true },
                { name: 'deviceModels', realName: 'deviceModels', array: true },
                { name: 'insuranceCompanies', realName: 'insuranceCompanies', array: true, type: 'InsuranceCompany' },
                { name: 'insuranceExtraCoverage', realName: 'insuranceExtraCoverage', array: true },
                {
                    name: 'insurancePolicyTerms',
                    realName: 'insurancePolicyTerms',
                    array: true,
                    type: 'InsurancePolicyTerm',
                },
                { name: 'provinces', realName: 'provinces', array: true, type: 'Province' },
                { name: 'cities', realName: 'cities', array: true },
                { name: 'cityRegions', realName: 'cityRegions', array: true },
                { name: 'shippingTypes', realName: 'shippingTypes', array: true, type: 'ShippingType' },
                { name: 'postTypes', realName: 'postTypes', array: true, type: 'PostType' },
                {
                    name: 'insurancePolicyCondition',
                    realName: 'insurancePolicyCondition',
                    type: 'InsurancePolicyCondition',
                },
                { name: 'insuranceData', realName: 'insuranceData', type: 'InsuranceData' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ElectronicEquipmentInsurance.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * آیا این نوع بیمه نامه، طرح بیمه ای دارد؟
         *
         * @return {bool}
         */
        ElectronicEquipmentInsurance.prototype.getHasPlan = function () {
            return this.hasPlan;
        };
    
        /**
         * Setter for HasPlan
         * 
         * @param {bool} value 
         */
        ElectronicEquipmentInsurance.prototype.setHasPlan = function (value) {
            this.hasPlan = value;
        };
    
        /**
         * لیست فرانشیز های بیمه ی تجهیزات الکترونیک
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getFranchisees = function () {
            return this.franchisees;
        };
    
        /**
         * Setter for Franchisees
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setFranchisees = function (value) {
            this.franchisees = value;
        };
    
        /**
         * انواع دستگاه ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getDeviceTypes = function () {
            return this.deviceTypes;
        };
    
        /**
         * Setter for DeviceTypes
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setDeviceTypes = function (value) {
            this.deviceTypes = value;
        };
    
        /**
         * برند های دستگاه ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getDeviceBrands = function () {
            return this.deviceBrands;
        };
    
        /**
         * Setter for DeviceBrands
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setDeviceBrands = function (value) {
            this.deviceBrands = value;
        };
    
        /**
         * مدل های دستگاه ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getDeviceModels = function () {
            return this.deviceModels;
        };
    
        /**
         * Setter for DeviceModels
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setDeviceModels = function (value) {
            this.deviceModels = value;
        };
    
        /**
         * شرکت های بیمه ی ارائه دهنده ی بیمه ی تجهیزات الکترونیک
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getInsuranceCompanies = function () {
            return this.insuranceCompanies;
        };
    
        /**
         * Setter for InsuranceCompanies
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setInsuranceCompanies = function (value) {
            this.insuranceCompanies = value;
        };
    
        /**
         * پوشش های اضافه
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getInsuranceExtraCoverage = function () {
            return this.insuranceExtraCoverage;
        };
    
        /**
         * Setter for InsuranceExtraCoverage
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setInsuranceExtraCoverage = function (value) {
            this.insuranceExtraCoverage = value;
        };
    
        /**
         * دوره های بیمه نامه
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getInsurancePolicyTerms = function () {
            return this.insurancePolicyTerms;
        };
    
        /**
         * Setter for InsurancePolicyTerms
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setInsurancePolicyTerms = function (value) {
            this.insurancePolicyTerms = value;
        };
    
        /**
         * لیست استان ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getProvinces = function () {
            return this.provinces;
        };
    
        /**
         * Setter for Provinces
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setProvinces = function (value) {
            this.provinces = value;
        };
    
        /**
         * لیست شهر ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getCities = function () {
            return this.cities;
        };
    
        /**
         * Setter for Cities
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setCities = function (value) {
            this.cities = value;
        };
    
        /**
         * لیست محله ها
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getCityRegions = function () {
            return this.cityRegions;
        };
    
        /**
         * Setter for CityRegions
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setCityRegions = function (value) {
            this.cityRegions = value;
        };
    
        /**
         * روش های دریافت بیمه نامه
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getShippingTypes = function () {
            return this.shippingTypes;
        };
    
        /**
         * Setter for ShippingTypes
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setShippingTypes = function (value) {
            this.shippingTypes = value;
        };
    
        /**
         * روش های ارسال بیمه نامه
         *
         * @return {array}
         */
        ElectronicEquipmentInsurance.prototype.getPostTypes = function () {
            return this.postTypes;
        };
    
        /**
         * Setter for PostTypes
         * 
         * @param {array} value 
         */
        ElectronicEquipmentInsurance.prototype.setPostTypes = function (value) {
            this.postTypes = value;
        };
    
        /**
         * شرایط بیمه نامه
         *
         * @return {InsurancePolicyCondition}
         */
        ElectronicEquipmentInsurance.prototype.getInsurancePolicyCondition = function () {
            return this.insurancePolicyCondition;
        };
    
        /**
         * Setter for InsurancePolicyCondition
         * 
         * @param {InsurancePolicyCondition} value 
         */
        ElectronicEquipmentInsurance.prototype.setInsurancePolicyCondition = function (value) {
            this.insurancePolicyCondition = value;
        };
    
        /**
         * اطلاعات بیمه نامه
         *
         * @return {InsuranceData}
         */
        ElectronicEquipmentInsurance.prototype.getInsuranceData = function () {
            return this.insuranceData;
        };
    
        /**
         * Setter for InsuranceData
         * 
         * @param {InsuranceData} value 
         */
        ElectronicEquipmentInsurance.prototype.setInsuranceData = function (value) {
            this.insuranceData = value;
        };
    
        return ElectronicEquipmentInsurance;
    }

}(angular));
