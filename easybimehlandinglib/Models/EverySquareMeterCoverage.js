/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of EverySquareMeterCoverage
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('EverySquareMeterCoverage', ['BaseModel', EverySquareMeterCoverageModel]);

    function EverySquareMeterCoverageModel(BaseModel) {
        var EverySquareMeterCoverage = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.fiscalYearId = this.getValue(obj.fiscalYearId);
            this.insuranceCoverageId = this.getValue(obj.insuranceCoverageId);
            this.coverageRial = this.getValue(obj.coverageRial);
            this.coverageEuro = this.getValue(obj.coverageEuro);
            this.fromPrice = this.getValue(obj.fromPrice);
            this.toPrice = this.getValue(obj.toPrice);
            this.isDiscount = this.getValue(obj.isDiscount);
            this.coverageValueType = this.getValue(obj.coverageValueType);
            this.coverageStringValue = this.getValue(obj.coverageStringValue);
            this.insuranceTypeIds = this.getValue(obj.insuranceTypeIds);
            this.insuranceCompanyIds = this.getValue(obj.insuranceCompanyIds);
            this.selected = this.getValue(obj.selected);
            this.isVisible = this.getValue(obj.isVisible);
            this.insuranceTypeId = this.getValue(obj.insuranceTypeId);
            this.insurancePlansIds = this.getValue(obj.insurancePlansIds);
            this.isActive = this.getValue(obj.isActive);
            this.insuranceTypeTitles = this.getValue(obj.insuranceTypeTitles);
            this.insuranceCompanyTitles = this.getValue(obj.insuranceCompanyTitles);
            this.insurancePlanTitles = this.getValue(obj.insurancePlanTitles);
            this.insuranceTypeTitle = this.getValue(obj.insuranceTypeTitle);
            this.createdBy = this.getValue(obj.createdBy);
            this.isPlan = this.getValue(obj.isPlan);
        };

        EverySquareMeterCoverage.prototype = new BaseModel();
        EverySquareMeterCoverage.prototype.constructor = EverySquareMeterCoverage;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        EverySquareMeterCoverage.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'fiscalYearId', realName: 'fiscalYearId' },
                { name: 'insuranceCoverageId', realName: 'insuranceCoverageId' },
                { name: 'coverageRial', realName: 'coverageRial' },
                { name: 'coverageEuro', realName: 'coverageEuro' },
                { name: 'fromPrice', realName: 'fromPrice' },
                { name: 'toPrice', realName: 'toPrice' },
                { name: 'isDiscount', realName: 'isDiscount' },
                { name: 'coverageValueType', realName: 'coverageValueType' },
                { name: 'coverageStringValue', realName: 'coverageStringValue' },
                { name: 'insuranceTypeIds', realName: 'insuranceTypeIds' },
                { name: 'insuranceCompanyIds', realName: 'insuranceCompanyIds' },
                { name: 'selected', realName: 'selected' },
                { name: 'isVisible', realName: 'isVisible' },
                { name: 'insuranceTypeId', realName: 'insuranceTypeId' },
                { name: 'insurancePlansIds', realName: 'insurancePlansIds' },
                { name: 'isActive', realName: 'isActive' },
                { name: 'insuranceTypeTitles', realName: 'insuranceTypeTitles' },
                { name: 'insuranceCompanyTitles', realName: 'insuranceCompanyTitles' },
                { name: 'insurancePlanTitles', realName: 'insurancePlanTitles' },
                { name: 'insuranceTypeTitle', realName: 'insuranceTypeTitle' },
                { name: 'createdBy', realName: 'createdBy' },
                { name: 'isPlan', realName: 'isPlan' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        EverySquareMeterCoverage.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        EverySquareMeterCoverage.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        EverySquareMeterCoverage.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        EverySquareMeterCoverage.prototype.getFiscalYearId = function () {
            return this.fiscalYearId;
        };
    
        /**
         * Setter for FiscalYearId
         * 
         * @param {int} value 
         */
        EverySquareMeterCoverage.prototype.setFiscalYearId = function (value) {
            this.fiscalYearId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        EverySquareMeterCoverage.prototype.getInsuranceCoverageId = function () {
            return this.insuranceCoverageId;
        };
    
        /**
         * Setter for InsuranceCoverageId
         * 
         * @param {int} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceCoverageId = function (value) {
            this.insuranceCoverageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        EverySquareMeterCoverage.prototype.getCoverageRial = function () {
            return this.coverageRial;
        };
    
        /**
         * Setter for CoverageRial
         * 
         * @param {int} value 
         */
        EverySquareMeterCoverage.prototype.setCoverageRial = function (value) {
            this.coverageRial = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getCoverageEuro = function () {
            return this.coverageEuro;
        };
    
        /**
         * Setter for CoverageEuro
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setCoverageEuro = function (value) {
            this.coverageEuro = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getFromPrice = function () {
            return this.fromPrice;
        };
    
        /**
         * Setter for FromPrice
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setFromPrice = function (value) {
            this.fromPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getToPrice = function () {
            return this.toPrice;
        };
    
        /**
         * Setter for ToPrice
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setToPrice = function (value) {
            this.toPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getIsDiscount = function () {
            return this.isDiscount;
        };
    
        /**
         * Setter for IsDiscount
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setIsDiscount = function (value) {
            this.isDiscount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getCoverageValueType = function () {
            return this.coverageValueType;
        };
    
        /**
         * Setter for CoverageValueType
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setCoverageValueType = function (value) {
            this.coverageValueType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        EverySquareMeterCoverage.prototype.getCoverageStringValue = function () {
            return this.coverageStringValue;
        };
    
        /**
         * Setter for CoverageStringValue
         * 
         * @param {string} value 
         */
        EverySquareMeterCoverage.prototype.setCoverageStringValue = function (value) {
            this.coverageStringValue = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceTypeIds = function () {
            return this.insuranceTypeIds;
        };
    
        /**
         * Setter for InsuranceTypeIds
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceTypeIds = function (value) {
            this.insuranceTypeIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceCompanyIds = function () {
            return this.insuranceCompanyIds;
        };
    
        /**
         * Setter for InsuranceCompanyIds
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceCompanyIds = function (value) {
            this.insuranceCompanyIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        EverySquareMeterCoverage.prototype.getSelected = function () {
            return this.selected;
        };
    
        /**
         * Setter for Selected
         * 
         * @param {bool} value 
         */
        EverySquareMeterCoverage.prototype.setSelected = function (value) {
            this.selected = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getIsVisible = function () {
            return this.isVisible;
        };
    
        /**
         * Setter for IsVisible
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setIsVisible = function (value) {
            this.isVisible = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceTypeId = function () {
            return this.insuranceTypeId;
        };
    
        /**
         * Setter for InsuranceTypeId
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceTypeId = function (value) {
            this.insuranceTypeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsurancePlansIds = function () {
            return this.insurancePlansIds;
        };
    
        /**
         * Setter for InsurancePlansIds
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsurancePlansIds = function (value) {
            this.insurancePlansIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getIsActive = function () {
            return this.isActive;
        };
    
        /**
         * Setter for IsActive
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setIsActive = function (value) {
            this.isActive = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceTypeTitles = function () {
            return this.insuranceTypeTitles;
        };
    
        /**
         * Setter for InsuranceTypeTitles
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceTypeTitles = function (value) {
            this.insuranceTypeTitles = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceCompanyTitles = function () {
            return this.insuranceCompanyTitles;
        };
    
        /**
         * Setter for InsuranceCompanyTitles
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceCompanyTitles = function (value) {
            this.insuranceCompanyTitles = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsurancePlanTitles = function () {
            return this.insurancePlanTitles;
        };
    
        /**
         * Setter for InsurancePlanTitles
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsurancePlanTitles = function (value) {
            this.insurancePlanTitles = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getInsuranceTypeTitle = function () {
            return this.insuranceTypeTitle;
        };
    
        /**
         * Setter for InsuranceTypeTitle
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setInsuranceTypeTitle = function (value) {
            this.insuranceTypeTitle = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getCreatedBy = function () {
            return this.createdBy;
        };
    
        /**
         * Setter for CreatedBy
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setCreatedBy = function (value) {
            this.createdBy = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        EverySquareMeterCoverage.prototype.getIsPlan = function () {
            return this.isPlan;
        };
    
        /**
         * Setter for IsPlan
         * 
         * @param {string|null} value 
         */
        EverySquareMeterCoverage.prototype.setIsPlan = function (value) {
            this.isPlan = value;
        };
    
        return EverySquareMeterCoverage;
    }

}(angular));
