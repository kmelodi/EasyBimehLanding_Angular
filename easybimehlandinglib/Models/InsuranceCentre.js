/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of InsuranceCentre
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('InsuranceCentre', ['BaseModel', InsuranceCentreModel]);

    function InsuranceCentreModel(BaseModel) {
        var InsuranceCentre = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.id = this.getValue(obj.id);
            this.personId = this.getValue(obj.personId);
            this.personalityType = this.getValue(obj.personalityType);
            this.insuranceCentreType = this.getValue(obj.insuranceCentreType);
            this.registerStatus = this.getValue(obj.registerStatus);
            this.centerName = this.getValue(obj.centerName);
            this.centerCode = this.getValue(obj.centerCode);
            this.branchCount = this.getValue(obj.branchCount);
            this.registrationNumber = this.getValue(obj.registrationNumber);
            this.freeUseGoldenPackExpireDate = this.getValue(obj.freeUseGoldenPackExpireDate);
            this.cityId = this.getValue(obj.cityId);
            this.cashPayment = this.getValue(obj.cashPayment);
            this.showInEasyBimeh = this.getValue(obj.showInEasyBimeh);
            this.installmentsPayment = this.getValue(obj.installmentsPayment);
            this.isInitialApplicant = this.getValue(obj.isInitialApplicant);
            this.branchsCount = this.getValue(obj.branchsCount);
            this.employeesCount = this.getValue(obj.employeesCount);
            this.zoneId = this.getValue(obj.zoneId);
            this.smsChargingStock = this.getValue(obj.smsChargingStock);
            this.independentBranch = this.getValue(obj.independentBranch);
            this.disableReason = this.getValue(obj.disableReason);
            this.termsConditions = this.getValue(obj.termsConditions);
            this.disableReasonDescription = this.getValue(obj.disableReasonDescription);
            this.unlimitedAccount = this.getValue(obj.unlimitedAccount);
            this.whiteLabel = this.getValue(obj.whiteLabel);
            this.phone = this.getValue(obj.phone);
            this.fax = this.getValue(obj.fax);
            this.address = this.getValue(obj.address);
            this.zipCode = this.getValue(obj.zipCode);
            this.email = this.getValue(obj.email);
            this.paymentUrl = this.getValue(obj.paymentUrl);
            this.callbackUrl = this.getValue(obj.callbackUrl);
            this.callbackUrlWhitelabel = this.getValue(obj.callbackUrlWhitelabel);
            this.webSite = this.getValue(obj.webSite);
            this.latitude = this.getValue(obj.latitude);
            this.longitude = this.getValue(obj.longitude);
            this.isActive = this.getValue(obj.isActive);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.cityRegionId = this.getValue(obj.cityRegionId);
            this.provinceId = this.getValue(obj.provinceId);
            this.cityName = this.getValue(obj.cityName);
            this.metaMediaActivityLicenceId = this.getValue(obj.metaMediaActivityLicenceId);
            this.metaMediaActivityLicenceUrl = this.getValue(obj.metaMediaActivityLicenceUrl);
            this.createOnPersianDate = this.getValue(obj.createOnPersianDate);
            this.insuranceCompanyId = this.getValue(obj.insuranceCompanyId);
            this.activePackageId = this.getValue(obj.activePackageId);
            this.packageActivationLastDate = this.getValue(obj.packageActivationLastDate);
            this.licenseApiKey = this.getValue(obj.licenseApiKey);
            this.verifyRequestUrl = this.getValue(obj.verifyRequestUrl);
            this.onlinePayment = this.getValue(obj.onlinePayment);
            this.cardToCardPayment = this.getValue(obj.cardToCardPayment);
            this.bankTransferPayment = this.getValue(obj.bankTransferPayment);
            this.cashOnDelivery = this.getValue(obj.cashOnDelivery);
            this.bankTransferSameOnlinePaymentInfo = this.getValue(obj.bankTransferSameOnlinePaymentInfo);
            this.bankParamId = this.getValue(obj.bankParamId);
            this.accountOwner = this.getValue(obj.accountOwner);
            this.accountNumber = this.getValue(obj.accountNumber);
            this.iban = this.getValue(obj.iban);
            this.cardBankParamId = this.getValue(obj.cardBankParamId);
            this.cardAccountOwner = this.getValue(obj.cardAccountOwner);
            this.cardAccountNumber = this.getValue(obj.cardAccountNumber);
            this.bankTransferParamId = this.getValue(obj.bankTransferParamId);
            this.bankTransferAccountOwner = this.getValue(obj.bankTransferAccountOwner);
            this.bankTransferAccountNumber = this.getValue(obj.bankTransferAccountNumber);
            this.bankTransferIBAN = this.getValue(obj.bankTransferIBAN);
        };

        InsuranceCentre.prototype = new BaseModel();
        InsuranceCentre.prototype.constructor = InsuranceCentre;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        InsuranceCentre.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'id', realName: 'id' },
                { name: 'personId', realName: 'personId' },
                { name: 'personalityType', realName: 'personalityType' },
                { name: 'insuranceCentreType', realName: 'insuranceCentreType' },
                { name: 'registerStatus', realName: 'registerStatus' },
                { name: 'centerName', realName: 'centerName' },
                { name: 'centerCode', realName: 'centerCode' },
                { name: 'branchCount', realName: 'branchCount' },
                { name: 'registrationNumber', realName: 'registrationNumber' },
                { name: 'freeUseGoldenPackExpireDate', realName: 'freeUseGoldenPackExpireDate' },
                { name: 'cityId', realName: 'cityId' },
                { name: 'cashPayment', realName: 'cashPayment' },
                { name: 'showInEasyBimeh', realName: 'showInEasyBimeh' },
                { name: 'installmentsPayment', realName: 'installmentsPayment' },
                { name: 'isInitialApplicant', realName: 'isInitialApplicant' },
                { name: 'branchsCount', realName: 'branchsCount' },
                { name: 'employeesCount', realName: 'employeesCount' },
                { name: 'zoneId', realName: 'zoneId' },
                { name: 'smsChargingStock', realName: 'smsChargingStock' },
                { name: 'independentBranch', realName: 'independentBranch' },
                { name: 'disableReason', realName: 'disableReason' },
                { name: 'termsConditions', realName: 'termsConditions' },
                { name: 'disableReasonDescription', realName: 'disableReasonDescription' },
                { name: 'unlimitedAccount', realName: 'unlimitedAccount' },
                { name: 'whiteLabel', realName: 'whiteLabel' },
                { name: 'phone', realName: 'phone' },
                { name: 'fax', realName: 'fax' },
                { name: 'address', realName: 'address' },
                { name: 'zipCode', realName: 'zipCode' },
                { name: 'email', realName: 'email' },
                { name: 'paymentUrl', realName: 'paymentUrl' },
                { name: 'callbackUrl', realName: 'callbackUrl' },
                { name: 'callbackUrlWhitelabel', realName: 'callbackUrlWhitelabel' },
                { name: 'webSite', realName: 'webSite' },
                { name: 'latitude', realName: 'latitude' },
                { name: 'longitude', realName: 'longitude' },
                { name: 'isActive', realName: 'isActive' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'cityRegionId', realName: 'cityRegionId' },
                { name: 'provinceId', realName: 'provinceId' },
                { name: 'cityName', realName: 'cityName' },
                { name: 'metaMediaActivityLicenceId', realName: 'metaMediaActivityLicenceId' },
                { name: 'metaMediaActivityLicenceUrl', realName: 'metaMediaActivityLicenceUrl' },
                { name: 'createOnPersianDate', realName: 'createOnPersianDate' },
                { name: 'insuranceCompanyId', realName: 'insuranceCompanyId', array: true },
                { name: 'activePackageId', realName: 'activePackageId' },
                { name: 'packageActivationLastDate', realName: 'packageActivationLastDate' },
                { name: 'licenseApiKey', realName: 'licenseApiKey' },
                { name: 'verifyRequestUrl', realName: 'verifyRequestUrl' },
                { name: 'onlinePayment', realName: 'onlinePayment' },
                { name: 'cardToCardPayment', realName: 'cardToCardPayment' },
                { name: 'bankTransferPayment', realName: 'bankTransferPayment' },
                { name: 'cashOnDelivery', realName: 'cashOnDelivery' },
                { name: 'bankTransferSameOnlinePaymentInfo', realName: 'bankTransferSameOnlinePaymentInfo' },
                { name: 'bankParamId', realName: 'bankParamId' },
                { name: 'accountOwner', realName: 'accountOwner' },
                { name: 'accountNumber', realName: 'accountNumber' },
                { name: 'iban', realName: 'iban' },
                { name: 'cardBankParamId', realName: 'cardBankParamId' },
                { name: 'cardAccountOwner', realName: 'cardAccountOwner' },
                { name: 'cardAccountNumber', realName: 'cardAccountNumber' },
                { name: 'bankTransferParamId', realName: 'bankTransferParamId' },
                { name: 'bankTransferAccountOwner', realName: 'bankTransferAccountOwner' },
                { name: 'bankTransferAccountNumber', realName: 'bankTransferAccountNumber' },
                { name: 'bankTransferIBAN', realName: 'bankTransferIBAN' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        InsuranceCentre.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getId = function () {
            return this.id;
        };
    
        /**
         * Setter for Id
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setId = function (value) {
            this.id = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getPersonId = function () {
            return this.personId;
        };
    
        /**
         * Setter for PersonId
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setPersonId = function (value) {
            this.personId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getPersonalityType = function () {
            return this.personalityType;
        };
    
        /**
         * Setter for PersonalityType
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setPersonalityType = function (value) {
            this.personalityType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getInsuranceCentreType = function () {
            return this.insuranceCentreType;
        };
    
        /**
         * Setter for InsuranceCentreType
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setInsuranceCentreType = function (value) {
            this.insuranceCentreType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getRegisterStatus = function () {
            return this.registerStatus;
        };
    
        /**
         * Setter for RegisterStatus
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setRegisterStatus = function (value) {
            this.registerStatus = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getCenterName = function () {
            return this.centerName;
        };
    
        /**
         * Setter for CenterName
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setCenterName = function (value) {
            this.centerName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getCenterCode = function () {
            return this.centerCode;
        };
    
        /**
         * Setter for CenterCode
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setCenterCode = function (value) {
            this.centerCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getBranchCount = function () {
            return this.branchCount;
        };
    
        /**
         * Setter for BranchCount
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setBranchCount = function (value) {
            this.branchCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getRegistrationNumber = function () {
            return this.registrationNumber;
        };
    
        /**
         * Setter for RegistrationNumber
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setRegistrationNumber = function (value) {
            this.registrationNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getFreeUseGoldenPackExpireDate = function () {
            return this.freeUseGoldenPackExpireDate;
        };
    
        /**
         * Setter for FreeUseGoldenPackExpireDate
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setFreeUseGoldenPackExpireDate = function (value) {
            this.freeUseGoldenPackExpireDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getCityId = function () {
            return this.cityId;
        };
    
        /**
         * Setter for CityId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setCityId = function (value) {
            this.cityId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getCashPayment = function () {
            return this.cashPayment;
        };
    
        /**
         * Setter for CashPayment
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setCashPayment = function (value) {
            this.cashPayment = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getShowInEasyBimeh = function () {
            return this.showInEasyBimeh;
        };
    
        /**
         * Setter for ShowInEasyBimeh
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setShowInEasyBimeh = function (value) {
            this.showInEasyBimeh = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getInstallmentsPayment = function () {
            return this.installmentsPayment;
        };
    
        /**
         * Setter for InstallmentsPayment
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setInstallmentsPayment = function (value) {
            this.installmentsPayment = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getIsInitialApplicant = function () {
            return this.isInitialApplicant;
        };
    
        /**
         * Setter for IsInitialApplicant
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setIsInitialApplicant = function (value) {
            this.isInitialApplicant = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getBranchsCount = function () {
            return this.branchsCount;
        };
    
        /**
         * Setter for BranchsCount
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setBranchsCount = function (value) {
            this.branchsCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getEmployeesCount = function () {
            return this.employeesCount;
        };
    
        /**
         * Setter for EmployeesCount
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setEmployeesCount = function (value) {
            this.employeesCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getZoneId = function () {
            return this.zoneId;
        };
    
        /**
         * Setter for ZoneId
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setZoneId = function (value) {
            this.zoneId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getSmsChargingStock = function () {
            return this.smsChargingStock;
        };
    
        /**
         * Setter for SmsChargingStock
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setSmsChargingStock = function (value) {
            this.smsChargingStock = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getIndependentBranch = function () {
            return this.independentBranch;
        };
    
        /**
         * Setter for IndependentBranch
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setIndependentBranch = function (value) {
            this.independentBranch = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getDisableReason = function () {
            return this.disableReason;
        };
    
        /**
         * Setter for DisableReason
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setDisableReason = function (value) {
            this.disableReason = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getTermsConditions = function () {
            return this.termsConditions;
        };
    
        /**
         * Setter for TermsConditions
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setTermsConditions = function (value) {
            this.termsConditions = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getDisableReasonDescription = function () {
            return this.disableReasonDescription;
        };
    
        /**
         * Setter for DisableReasonDescription
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setDisableReasonDescription = function (value) {
            this.disableReasonDescription = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getUnlimitedAccount = function () {
            return this.unlimitedAccount;
        };
    
        /**
         * Setter for UnlimitedAccount
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setUnlimitedAccount = function (value) {
            this.unlimitedAccount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getWhiteLabel = function () {
            return this.whiteLabel;
        };
    
        /**
         * Setter for WhiteLabel
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setWhiteLabel = function (value) {
            this.whiteLabel = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getPhone = function () {
            return this.phone;
        };
    
        /**
         * Setter for Phone
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setPhone = function (value) {
            this.phone = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getFax = function () {
            return this.fax;
        };
    
        /**
         * Setter for Fax
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setFax = function (value) {
            this.fax = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getAddress = function () {
            return this.address;
        };
    
        /**
         * Setter for Address
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setAddress = function (value) {
            this.address = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getZipCode = function () {
            return this.zipCode;
        };
    
        /**
         * Setter for ZipCode
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setZipCode = function (value) {
            this.zipCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getEmail = function () {
            return this.email;
        };
    
        /**
         * Setter for Email
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setEmail = function (value) {
            this.email = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getPaymentUrl = function () {
            return this.paymentUrl;
        };
    
        /**
         * Setter for PaymentUrl
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setPaymentUrl = function (value) {
            this.paymentUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getCallbackUrl = function () {
            return this.callbackUrl;
        };
    
        /**
         * Setter for CallbackUrl
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setCallbackUrl = function (value) {
            this.callbackUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getCallbackUrlWhitelabel = function () {
            return this.callbackUrlWhitelabel;
        };
    
        /**
         * Setter for CallbackUrlWhitelabel
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setCallbackUrlWhitelabel = function (value) {
            this.callbackUrlWhitelabel = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getWebSite = function () {
            return this.webSite;
        };
    
        /**
         * Setter for WebSite
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setWebSite = function (value) {
            this.webSite = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {double}
         */
        InsuranceCentre.prototype.getLatitude = function () {
            return this.latitude;
        };
    
        /**
         * Setter for Latitude
         * 
         * @param {double} value 
         */
        InsuranceCentre.prototype.setLatitude = function (value) {
            this.latitude = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {double}
         */
        InsuranceCentre.prototype.getLongitude = function () {
            return this.longitude;
        };
    
        /**
         * Setter for Longitude
         * 
         * @param {double} value 
         */
        InsuranceCentre.prototype.setLongitude = function (value) {
            this.longitude = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getIsActive = function () {
            return this.isActive;
        };
    
        /**
         * Setter for IsActive
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setIsActive = function (value) {
            this.isActive = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getCityRegionId = function () {
            return this.cityRegionId;
        };
    
        /**
         * Setter for CityRegionId
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setCityRegionId = function (value) {
            this.cityRegionId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getProvinceId = function () {
            return this.provinceId;
        };
    
        /**
         * Setter for ProvinceId
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setProvinceId = function (value) {
            this.provinceId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getCityName = function () {
            return this.cityName;
        };
    
        /**
         * Setter for CityName
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setCityName = function (value) {
            this.cityName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getMetaMediaActivityLicenceId = function () {
            return this.metaMediaActivityLicenceId;
        };
    
        /**
         * Setter for MetaMediaActivityLicenceId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setMetaMediaActivityLicenceId = function (value) {
            this.metaMediaActivityLicenceId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getMetaMediaActivityLicenceUrl = function () {
            return this.metaMediaActivityLicenceUrl;
        };
    
        /**
         * Setter for MetaMediaActivityLicenceUrl
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setMetaMediaActivityLicenceUrl = function (value) {
            this.metaMediaActivityLicenceUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getCreateOnPersianDate = function () {
            return this.createOnPersianDate;
        };
    
        /**
         * Setter for CreateOnPersianDate
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setCreateOnPersianDate = function (value) {
            this.createOnPersianDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        InsuranceCentre.prototype.getInsuranceCompanyId = function () {
            return this.insuranceCompanyId;
        };
    
        /**
         * Setter for InsuranceCompanyId
         * 
         * @param {array} value 
         */
        InsuranceCentre.prototype.setInsuranceCompanyId = function (value) {
            this.insuranceCompanyId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getActivePackageId = function () {
            return this.activePackageId;
        };
    
        /**
         * Setter for ActivePackageId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setActivePackageId = function (value) {
            this.activePackageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getPackageActivationLastDate = function () {
            return this.packageActivationLastDate;
        };
    
        /**
         * Setter for PackageActivationLastDate
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setPackageActivationLastDate = function (value) {
            this.packageActivationLastDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getLicenseApiKey = function () {
            return this.licenseApiKey;
        };
    
        /**
         * Setter for LicenseApiKey
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setLicenseApiKey = function (value) {
            this.licenseApiKey = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        InsuranceCentre.prototype.getVerifyRequestUrl = function () {
            return this.verifyRequestUrl;
        };
    
        /**
         * Setter for VerifyRequestUrl
         * 
         * @param {string|null} value 
         */
        InsuranceCentre.prototype.setVerifyRequestUrl = function (value) {
            this.verifyRequestUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getOnlinePayment = function () {
            return this.onlinePayment;
        };
    
        /**
         * Setter for OnlinePayment
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setOnlinePayment = function (value) {
            this.onlinePayment = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getCardToCardPayment = function () {
            return this.cardToCardPayment;
        };
    
        /**
         * Setter for CardToCardPayment
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setCardToCardPayment = function (value) {
            this.cardToCardPayment = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getBankTransferPayment = function () {
            return this.bankTransferPayment;
        };
    
        /**
         * Setter for BankTransferPayment
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setBankTransferPayment = function (value) {
            this.bankTransferPayment = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getCashOnDelivery = function () {
            return this.cashOnDelivery;
        };
    
        /**
         * Setter for CashOnDelivery
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setCashOnDelivery = function (value) {
            this.cashOnDelivery = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        InsuranceCentre.prototype.getBankTransferSameOnlinePaymentInfo = function () {
            return this.bankTransferSameOnlinePaymentInfo;
        };
    
        /**
         * Setter for BankTransferSameOnlinePaymentInfo
         * 
         * @param {bool} value 
         */
        InsuranceCentre.prototype.setBankTransferSameOnlinePaymentInfo = function (value) {
            this.bankTransferSameOnlinePaymentInfo = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getBankParamId = function () {
            return this.bankParamId;
        };
    
        /**
         * Setter for BankParamId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setBankParamId = function (value) {
            this.bankParamId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getAccountOwner = function () {
            return this.accountOwner;
        };
    
        /**
         * Setter for AccountOwner
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setAccountOwner = function (value) {
            this.accountOwner = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getAccountNumber = function () {
            return this.accountNumber;
        };
    
        /**
         * Setter for AccountNumber
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setAccountNumber = function (value) {
            this.accountNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getIban = function () {
            return this.iban;
        };
    
        /**
         * Setter for Iban
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setIban = function (value) {
            this.iban = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getCardBankParamId = function () {
            return this.cardBankParamId;
        };
    
        /**
         * Setter for CardBankParamId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setCardBankParamId = function (value) {
            this.cardBankParamId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getCardAccountOwner = function () {
            return this.cardAccountOwner;
        };
    
        /**
         * Setter for CardAccountOwner
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setCardAccountOwner = function (value) {
            this.cardAccountOwner = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getCardAccountNumber = function () {
            return this.cardAccountNumber;
        };
    
        /**
         * Setter for CardAccountNumber
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setCardAccountNumber = function (value) {
            this.cardAccountNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        InsuranceCentre.prototype.getBankTransferParamId = function () {
            return this.bankTransferParamId;
        };
    
        /**
         * Setter for BankTransferParamId
         * 
         * @param {int} value 
         */
        InsuranceCentre.prototype.setBankTransferParamId = function (value) {
            this.bankTransferParamId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getBankTransferAccountOwner = function () {
            return this.bankTransferAccountOwner;
        };
    
        /**
         * Setter for BankTransferAccountOwner
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setBankTransferAccountOwner = function (value) {
            this.bankTransferAccountOwner = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getBankTransferAccountNumber = function () {
            return this.bankTransferAccountNumber;
        };
    
        /**
         * Setter for BankTransferAccountNumber
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setBankTransferAccountNumber = function (value) {
            this.bankTransferAccountNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        InsuranceCentre.prototype.getBankTransferIBAN = function () {
            return this.bankTransferIBAN;
        };
    
        /**
         * Setter for BankTransferIBAN
         * 
         * @param {string} value 
         */
        InsuranceCentre.prototype.setBankTransferIBAN = function (value) {
            this.bankTransferIBAN = value;
        };
    
        return InsuranceCentre;
    }

}(angular));
