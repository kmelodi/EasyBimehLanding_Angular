/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ElectronicEquipmentInsurancePolicyFilter
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('ElectronicEquipmentInsurancePolicyFilter', ['BaseModel', ElectronicEquipmentInsurancePolicyFilterModel]);

    function ElectronicEquipmentInsurancePolicyFilterModel(BaseModel) {
        var ElectronicEquipmentInsurancePolicyFilter = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.deviceTypeId = this.getValue(obj.deviceTypeId);
            this.deviceBrandId = this.getValue(obj.deviceBrandId);
            this.deviceModelId = this.getValue(obj.deviceModelId);
            this.buildYear = this.getValue(obj.buildYear);
            this.deviceValue = this.getValue(obj.deviceValue);
            this.franchiseeId = this.getValue(obj.franchiseeId);
            this.insuranceExtraCoverageIds = this.getValue(obj.insuranceExtraCoverageIds);
            this.policyTermId = this.getValue(obj.policyTermId);
            this.insuranceCentreSubDomainName = this.getValue(obj.insuranceCentreSubDomainName);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.insuranceCompanyId = this.getValue(obj.insuranceCompanyId);
            this.isSearchQuery = this.getValue(obj.isSearchQuery);
            this.giftCode = this.getValue(obj.giftCode);
            this.customerUserId = this.getValue(obj.customerUserId);
        };

        ElectronicEquipmentInsurancePolicyFilter.prototype = new BaseModel();
        ElectronicEquipmentInsurancePolicyFilter.prototype.constructor = ElectronicEquipmentInsurancePolicyFilter;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'deviceTypeId', realName: 'deviceTypeId' },
                { name: 'deviceBrandId', realName: 'deviceBrandId' },
                { name: 'deviceModelId', realName: 'deviceModelId' },
                { name: 'buildYear', realName: 'buildYear' },
                { name: 'deviceValue', realName: 'deviceValue' },
                { name: 'franchiseeId', realName: 'franchiseeId' },
                { name: 'insuranceExtraCoverageIds', realName: 'insuranceExtraCoverageIds' },
                { name: 'policyTermId', realName: 'policyTermId' },
                { name: 'insuranceCentreSubDomainName', realName: 'insuranceCentreSubDomainName' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'insuranceCompanyId', realName: 'insuranceCompanyId' },
                { name: 'isSearchQuery', realName: 'isSearchQuery' },
                { name: 'giftCode', realName: 'giftCode' },
                { name: 'customerUserId', realName: 'customerUserId' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getDeviceTypeId = function () {
            return this.deviceTypeId;
        };
    
        /**
         * Setter for DeviceTypeId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setDeviceTypeId = function (value) {
            this.deviceTypeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getDeviceBrandId = function () {
            return this.deviceBrandId;
        };
    
        /**
         * Setter for DeviceBrandId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setDeviceBrandId = function (value) {
            this.deviceBrandId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getDeviceModelId = function () {
            return this.deviceModelId;
        };
    
        /**
         * Setter for DeviceModelId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setDeviceModelId = function (value) {
            this.deviceModelId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getBuildYear = function () {
            return this.buildYear;
        };
    
        /**
         * Setter for BuildYear
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setBuildYear = function (value) {
            this.buildYear = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getDeviceValue = function () {
            return this.deviceValue;
        };
    
        /**
         * Setter for DeviceValue
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setDeviceValue = function (value) {
            this.deviceValue = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getFranchiseeId = function () {
            return this.franchiseeId;
        };
    
        /**
         * Setter for FranchiseeId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setFranchiseeId = function (value) {
            this.franchiseeId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getInsuranceExtraCoverageIds = function () {
            return this.insuranceExtraCoverageIds;
        };
    
        /**
         * Setter for InsuranceExtraCoverageIds
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setInsuranceExtraCoverageIds = function (value) {
            this.insuranceExtraCoverageIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getPolicyTermId = function () {
            return this.policyTermId;
        };
    
        /**
         * Setter for PolicyTermId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setPolicyTermId = function (value) {
            this.policyTermId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getInsuranceCentreSubDomainName = function () {
            return this.insuranceCentreSubDomainName;
        };
    
        /**
         * Setter for InsuranceCentreSubDomainName
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setInsuranceCentreSubDomainName = function (value) {
            this.insuranceCentreSubDomainName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getInsuranceCompanyId = function () {
            return this.insuranceCompanyId;
        };
    
        /**
         * Setter for InsuranceCompanyId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setInsuranceCompanyId = function (value) {
            this.insuranceCompanyId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getIsSearchQuery = function () {
            return this.isSearchQuery;
        };
    
        /**
         * Setter for IsSearchQuery
         * 
         * @param {bool} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setIsSearchQuery = function (value) {
            this.isSearchQuery = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getGiftCode = function () {
            return this.giftCode;
        };
    
        /**
         * Setter for GiftCode
         * 
         * @param {string|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setGiftCode = function (value) {
            this.giftCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.getCustomerUserId = function () {
            return this.customerUserId;
        };
    
        /**
         * Setter for CustomerUserId
         * 
         * @param {int|null} value 
         */
        ElectronicEquipmentInsurancePolicyFilter.prototype.setCustomerUserId = function (value) {
            this.customerUserId = value;
        };
    
        return ElectronicEquipmentInsurancePolicyFilter;
    }

}(angular));
