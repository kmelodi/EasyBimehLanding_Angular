/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ElevatorInsurancePolicyFilter
 *
 * @constructor
 */
angular.module('EasyBimehLandingLib')
    .factory('ElevatorInsurancePolicyFilter', ['BaseModel', ElevatorInsurancePolicyFilterModel]);

    function ElevatorInsurancePolicyFilterModel(BaseModel) {
        var ElevatorInsurancePolicyFilter = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.buildingUseTypeParamId = this.getValue(obj.buildingUseTypeParamId);
            this.elevatorTypeParamId = this.getValue(obj.elevatorTypeParamId);
            this.floors = this.getValue(obj.floors);
            this.elevatorCapacityCargo = this.getValue(obj.elevatorCapacityCargo);
            this.elevatorCapacity = this.getValue(obj.elevatorCapacity);
            this.riskLevelId = this.getValue(obj.riskLevelId);
            this.insurancePolicyTerms = this.getValue(obj.insurancePolicyTerms);
            this.defectOrganCoverageId = this.getValue(obj.defectOrganCoverageId);
            this.deathCapitalCoverageId = this.getValue(obj.deathCapitalCoverageId);
            this.financialCoverageId = this.getValue(obj.financialCoverageId);
            this.medicalCostCoverageId = this.getValue(obj.medicalCostCoverageId);
            this.ownerCoverage = this.getValue(obj.ownerCoverage);
            this.insuranceExtraCoverageIds = this.getValue(obj.insuranceExtraCoverageIds);
            this.policyTermId = this.getValue(obj.policyTermId);
            this.insuranceCentreSubDomainName = this.getValue(obj.insuranceCentreSubDomainName);
            this.insuranceCentreId = this.getValue(obj.insuranceCentreId);
            this.insuranceCompanyId = this.getValue(obj.insuranceCompanyId);
            this.isSearchQuery = this.getValue(obj.isSearchQuery);
            this.giftCode = this.getValue(obj.giftCode);
            this.customerUserId = this.getValue(obj.customerUserId);
        };

        ElevatorInsurancePolicyFilter.prototype = new BaseModel();
        ElevatorInsurancePolicyFilter.prototype.constructor = ElevatorInsurancePolicyFilter;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ElevatorInsurancePolicyFilter.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'buildingUseTypeParamId', realName: 'buildingUseTypeParamId' },
                { name: 'elevatorTypeParamId', realName: 'elevatorTypeParamId' },
                { name: 'floors', realName: 'floors' },
                { name: 'elevatorCapacityCargo', realName: 'elevatorCapacityCargo' },
                { name: 'elevatorCapacity', realName: 'elevatorCapacity' },
                { name: 'riskLevelId', realName: 'riskLevelId' },
                { name: 'insurancePolicyTerms', realName: 'insurancePolicyTerms' },
                { name: 'defectOrganCoverageId', realName: 'defectOrganCoverageId' },
                { name: 'deathCapitalCoverageId', realName: 'deathCapitalCoverageId' },
                { name: 'financialCoverageId', realName: 'financialCoverageId' },
                { name: 'medicalCostCoverageId', realName: 'medicalCostCoverageId' },
                { name: 'ownerCoverage', realName: 'ownerCoverage' },
                { name: 'insuranceExtraCoverageIds', realName: 'insuranceExtraCoverageIds' },
                { name: 'policyTermId', realName: 'policyTermId' },
                { name: 'insuranceCentreSubDomainName', realName: 'insuranceCentreSubDomainName' },
                { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
                { name: 'insuranceCompanyId', realName: 'insuranceCompanyId' },
                { name: 'isSearchQuery', realName: 'isSearchQuery' },
                { name: 'giftCode', realName: 'giftCode' },
                { name: 'customerUserId', realName: 'customerUserId' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ElevatorInsurancePolicyFilter.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getBuildingUseTypeParamId = function () {
            return this.buildingUseTypeParamId;
        };
    
        /**
         * Setter for BuildingUseTypeParamId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setBuildingUseTypeParamId = function (value) {
            this.buildingUseTypeParamId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getElevatorTypeParamId = function () {
            return this.elevatorTypeParamId;
        };
    
        /**
         * Setter for ElevatorTypeParamId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setElevatorTypeParamId = function (value) {
            this.elevatorTypeParamId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getFloors = function () {
            return this.floors;
        };
    
        /**
         * Setter for Floors
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setFloors = function (value) {
            this.floors = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getElevatorCapacityCargo = function () {
            return this.elevatorCapacityCargo;
        };
    
        /**
         * Setter for ElevatorCapacityCargo
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setElevatorCapacityCargo = function (value) {
            this.elevatorCapacityCargo = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getElevatorCapacity = function () {
            return this.elevatorCapacity;
        };
    
        /**
         * Setter for ElevatorCapacity
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setElevatorCapacity = function (value) {
            this.elevatorCapacity = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getRiskLevelId = function () {
            return this.riskLevelId;
        };
    
        /**
         * Setter for RiskLevelId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setRiskLevelId = function (value) {
            this.riskLevelId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getInsurancePolicyTerms = function () {
            return this.insurancePolicyTerms;
        };
    
        /**
         * Setter for InsurancePolicyTerms
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setInsurancePolicyTerms = function (value) {
            this.insurancePolicyTerms = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getDefectOrganCoverageId = function () {
            return this.defectOrganCoverageId;
        };
    
        /**
         * Setter for DefectOrganCoverageId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setDefectOrganCoverageId = function (value) {
            this.defectOrganCoverageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getDeathCapitalCoverageId = function () {
            return this.deathCapitalCoverageId;
        };
    
        /**
         * Setter for DeathCapitalCoverageId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setDeathCapitalCoverageId = function (value) {
            this.deathCapitalCoverageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getFinancialCoverageId = function () {
            return this.financialCoverageId;
        };
    
        /**
         * Setter for FinancialCoverageId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setFinancialCoverageId = function (value) {
            this.financialCoverageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getMedicalCostCoverageId = function () {
            return this.medicalCostCoverageId;
        };
    
        /**
         * Setter for MedicalCostCoverageId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setMedicalCostCoverageId = function (value) {
            this.medicalCostCoverageId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        ElevatorInsurancePolicyFilter.prototype.getOwnerCoverage = function () {
            return this.ownerCoverage;
        };
    
        /**
         * Setter for OwnerCoverage
         * 
         * @param {bool} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setOwnerCoverage = function (value) {
            this.ownerCoverage = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getInsuranceExtraCoverageIds = function () {
            return this.insuranceExtraCoverageIds;
        };
    
        /**
         * Setter for InsuranceExtraCoverageIds
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setInsuranceExtraCoverageIds = function (value) {
            this.insuranceExtraCoverageIds = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getPolicyTermId = function () {
            return this.policyTermId;
        };
    
        /**
         * Setter for PolicyTermId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setPolicyTermId = function (value) {
            this.policyTermId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getInsuranceCentreSubDomainName = function () {
            return this.insuranceCentreSubDomainName;
        };
    
        /**
         * Setter for InsuranceCentreSubDomainName
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setInsuranceCentreSubDomainName = function (value) {
            this.insuranceCentreSubDomainName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getInsuranceCentreId = function () {
            return this.insuranceCentreId;
        };
    
        /**
         * Setter for InsuranceCentreId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setInsuranceCentreId = function (value) {
            this.insuranceCentreId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getInsuranceCompanyId = function () {
            return this.insuranceCompanyId;
        };
    
        /**
         * Setter for InsuranceCompanyId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setInsuranceCompanyId = function (value) {
            this.insuranceCompanyId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool}
         */
        ElevatorInsurancePolicyFilter.prototype.getIsSearchQuery = function () {
            return this.isSearchQuery;
        };
    
        /**
         * Setter for IsSearchQuery
         * 
         * @param {bool} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setIsSearchQuery = function (value) {
            this.isSearchQuery = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getGiftCode = function () {
            return this.giftCode;
        };
    
        /**
         * Setter for GiftCode
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setGiftCode = function (value) {
            this.giftCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ElevatorInsurancePolicyFilter.prototype.getCustomerUserId = function () {
            return this.customerUserId;
        };
    
        /**
         * Setter for CustomerUserId
         * 
         * @param {string|null} value 
         */
        ElevatorInsurancePolicyFilter.prototype.setCustomerUserId = function (value) {
            this.customerUserId = value;
        };
    
        return ElevatorInsurancePolicyFilter;
    }

}(angular));
